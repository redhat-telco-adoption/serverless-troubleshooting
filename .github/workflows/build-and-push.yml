name: Build and Push Container Images

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'kubernetes/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'kubernetes/**'
  workflow_dispatch:

env:
  REGISTRY: quay.io
  IMAGE_NAME: redhat-telco-adoption/serverless-troubleshooting

jobs:
  build-and-push:
    name: Build and Push Container Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Get short SHA
        id: sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          
      # Extract version from pom.xml and bump patch version if pushing to main
      - name: Extract and bump version
        id: version
        run: |
          # Extract current version from pom.xml
          CURRENT_VERSION=$(mvn --batch-mode help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $CURRENT_VERSION"
          
          # Remove -SNAPSHOT suffix if present
          SEMVER_VERSION=${CURRENT_VERSION%-SNAPSHOT}
          echo "Semver version: $SEMVER_VERSION"
          
          # Only bump version when pushing to main branch
          if [[ "${{ github.event_name }}" != "pull_request" ]]; then
            # Split version into major.minor.patch
            IFS='.' read -r -a VERSION_PARTS <<< "$SEMVER_VERSION"
            MAJOR="${VERSION_PARTS[0]}"
            MINOR="${VERSION_PARTS[1]}"
            PATCH="${VERSION_PARTS[2]}"
            
            # Bump patch version
            NEW_PATCH=$((PATCH + 1))
            NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
            echo "Bumped version: $NEW_VERSION"
            
            # Update pom.xml with new version
            mvn --batch-mode versions:set -DnewVersion="$NEW_VERSION-SNAPSHOT" -DgenerateBackupPoms=false
            
            # Set output for later steps
            echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          else
            # For pull requests, just use the current version without bumping
            echo "version=$SEMVER_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64,amd64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      # Build JVM version
      - name: Build JVM application
        run: ./mvnw --batch-mode package -DskipTests

      # Build JVM container image and push
      - name: Build and push JVM container image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/main/docker/Dockerfile.jvm
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}-jdk,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.sha.outputs.short_sha }}-jdk

      # Build Native version
      - name: Build Native application
        run: ./mvnw --batch-mode package -Dnative -DskipTests -Dquarkus.native.container-build=true

      # Build Native container image and push
      - name: Build and push Native container image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/main/docker/Dockerfile.native-micro
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}-native,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.sha.outputs.short_sha }}-native,

      # Add a summary of the build
      - name: Build Summary
        run: |
          echo "## Container Images" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… JVM Image: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.sha.outputs.short_sha }}-jdk\`" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Native Image: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.sha.outputs.short_sha }}-native\`" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Latest Image: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\`" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ github.event_name }}" != "pull_request" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "ðŸ”„ Version bumped to: \`${{ steps.version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
            echo "ðŸ”„ Commit SHA: \`${{ steps.sha.outputs.short_sha }}\`" >> $GITHUB_STEP_SUMMARY
          fi